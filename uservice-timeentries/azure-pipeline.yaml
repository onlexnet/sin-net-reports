resources:
  - repo: self

variables:
  # connection, defined manually.
  # The connection used in pipeline allows to access to ACR sinnet.azurecr.io
  dockerRegistryServiceConnection: "sinnet-acr"
  # name of the registry where the image is hosted on.
  # in Docker world, it is also part of image name (prefix)
  containerRegistry: "sinnetapps.azurecr.io"

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      # We have to include all folders where source files are located
      - /uservice-timeentries/
      - /uservice-timeentries/api.graphql/

pr:
  branches:
    include:
      - master
  paths:
    include:
      # the same folders as for trigger
      - /uservice-timeentries/
      - /uservice-timeentries/api.graphql/

jobs:
  - job: CICD
    displayName: TimeEntries CI/CD build
    pool:
      vmImage: ubuntu-latest

    variables:
      # We have enabled the build pipelines for Pull Request vs master.
      # There are some differences between a normal build and the build triggered by a PR though:
      # The build triggered from a PR do not push the docker images to any docker registry.
      buildImageOnMaster: $[ eq(variables['build.sourceBranch'], 'refs/heads/master') ]

    
    steps:
      - bash: |
          echo "##vso[task.setvariable variable=my_version]$(cat uservice-timeentries/.version)"
        displayName: Read version from local .version file

      - task: Maven@3
        env:
          # pom.xml uses SONAR_TOKEN env variable to communicate with sonarcloud.
          # The crrent CI/CD pipeline has secret named SONAR_TOKEN with proper value.
          # Problem: Azure pipeline secrets can't be used directly as environment varianbles
          # https://github.com/Microsoft/azure-pipelines-agent/issues/145
          # As the result, we have to put CICD secret to build variable
          SONAR_TOKEN: $(SONAR_TOKEN)
        # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/maven
        displayName: 'Project compilation with Maven'
        inputs:
          mavenPomFile: 'uservice-timeentries/main/pom.xml'
          goals: 'verify'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          # options:
          #  - disable log entries (a lot of entries) related to artifacts downloaded by maven
          options: -B --no-transfer-progress
          sonarQubeRunAnalysis: true
          sqMavenPluginVersionChoice: 'latest' # Required when sonarQubeRunAnalysis == True# Options: latest, pom
          checkStyleRunAnalysis: true # We use checkstyle in coding, so let's use it with Maven as well

      - task: Docker@2
        displayName: Build uservice image
        inputs:
          command: build
          dockerfile: uservice-timeentries/Dockerfile
          containerRegistry: $(dockerRegistryServiceConnection)
          repository: uservice-timeentries
          # to use inside docker variable do use version with build
          # lets put them from just obtained value from .version file
          arguments: --build-arg REVISION=$(my_version)
          tags: |
            latest
            $(Build.SourceBranchName)-$(Build.BuildNumber)

      - task: Docker@2
        displayName: Push uservice image to docker ACR
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        inputs:
          command: push
          containerRegistry: $(dockerRegistryServiceConnection)
          repository: uservice-timeentries
          tags: |
            latest
            $(Build.SourceBranchName)-$(Build.BuildNumber)

