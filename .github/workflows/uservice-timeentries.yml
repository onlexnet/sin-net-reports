# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GitHub image build for uservice-webapi

on:
  push:
    branches: [ master, siudeks/issue123-1 ]
    paths: [ uservice-timeentries/**, .github/workflows/uservice-timeentries.yml ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Login to Docker 
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  
      - name: cache maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Build with Maven gRpc API
        run: mvn -ntp install
        working-directory: api/client-java
      - name: Build with Maven base package
        run: mvn -ntp install
        working-directory: libs-java

      - name: Build with Maven Timeentries
        run: |
          export SEMVERSION=$(cat ../.semversion)
          mvn -ntp package --file pom.xml
        working-directory: uservice-timeentries/main
      
      - name: Build docker image
        working-directory: uservice-timeentries/main
        run: |
          IMAGE_NAME=ghcr.io/onlexnet/uservice-timeentries:$GITHUB_RUN_ID
          # docker build . -t $IMAGE_TAG
          # docker push $IMAGE_TAG
          mvn spring-boot:build-image -ntp -pl host -Dspring-boot.build-image.imageName=$IMAGE_NAME -DskipTests

      # - name: Build docker image for uservice-timeentries
      #   uses: devcontainers/ci@v0.3
      #   with:
      #     subFolder: uservice-timeentries
      #     runCmd: |
      #       # env variables: https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
      #       docker build . -t ghcr.io/onlexnet/uservice-timeentries:$GITHUB_RUN_ID
      #       # login to docker artifactory
      #       echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      #       # push image to docker artifactory
      #       docker push ghcr.io/onlexnet/uservice-timeentries:$GITHUB_RUN_ID
