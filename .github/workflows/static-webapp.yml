# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: GitHub image build for static-webapp

on:
  push:
    branches: [ master, siudeks/issue123-1 ]
    paths: [ static-webapp/**, /uservice-webapi/api.graphql/, .github/workflows/static-webapp.yml ]
  pull_request:
    branches: [ master ]

jobs:

  Build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Build and run dev container task
        uses: devcontainers/ci@v0.3
        with:
          subFolder: static-webapp
          runCmd: |
            export MY_VERSION=$(cat .version)
            cd main
            npm version $MY_VERSION 
            npm install
            npm run generate
            npm run build

      - name: Build docker image for static-webapp
        uses: devcontainers/ci@v0.3
        env:
          RUN_ID: ${{ github.run_id }}
          TEST_ENV: ABC
        with:
          subFolder: static-webapp
          runCmd: |
            # env variables: https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
            # also interesting here https://github.com/devcontainers/ci/issues/153#issuecomment-1488384391
            # docker build . -t ghcr.io/onlexnet/static-webapp:$RUN_ID
            echo "RUN_ID = $RUN_ID"
            echo "GITHUB_RUN_ID = $GITHUB_RUN_ID"
            echo "TEST_ENV = $TEST_ENV"

  DeployDev:
    name: Deploy to DEV01
    if: ${{ github.event_name == 'pull_request' }}
    needs: [ Build ]
    runs-on: ubuntu-latest
    environment:
      name: dev01
      url: 'http://dev.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying!

  DeployUat:
    name: Deploy to PROD
    if: github.event.ref == 'refs/heads/main'
    needs: [ Build ]
    runs-on: ubuntu-latest
    environment:
      name: prod1
      url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying!

