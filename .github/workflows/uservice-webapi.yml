name: CI uservice-webapi

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "uservice-webapi"
  cancel-in-progress: false

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: 
      - libs-java/**
      - api/**
      - uservice-webapi/**
      - .github/workflows/uservice-webapi.yml
  pull_request:
    branches: [ main ]
    paths: 
      - libs-java/**
      - api/**
      - uservice-webapi/**
      - .github/workflows/uservice-webapi.yml

jobs:
  Build:
    runs-on: ubuntu-latest

    outputs:
      uservice_webapi_image_name: ${{ steps.BuildDockerImage.outputs.image_name }}

    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: Login to Docker 
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  
      - name: cache maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Build with Maven gRpc API
        run: mvn -ntp install
        working-directory: api/client-java
      - name: Build with Maven base package
        run: mvn -ntp install
        working-directory: libs-java

      - name: Build with Maven Webapi
        run: |
          # download latest version of applicationinsights to folder expected to be included into target image
          # as we known, the copied file will be located finally in /workspaces/BOOT-INFO/classes/applicationinsights.
          pushd . # remember current working dir
          cd host/src/main/resources/applicationinsights # goto well-known folder designed to be included in target image
          export APPLICATIONINSIGHTS_AGENT_VERSION=3.7.0
          wget --no-verbose https://github.com/microsoft/ApplicationInsights-Java/releases/download/${APPLICATIONINSIGHTS_AGENT_VERSION}/applicationinsights-agent-${APPLICATIONINSIGHTS_AGENT_VERSION}.jar # download ...
          mv applicationinsights-agent-${APPLICATIONINSIGHTS_AGENT_VERSION}.jar applicationinsights-agent.jar # ... and rename to unified name applicationinsight agent
          popd # restore working dir

          export SEMVERSION=$(cat .semversion)
          mvn -ntp install -Drevision=$SEMVERSION
        working-directory: uservice-webapi
      
      - id: BuildDockerImage
        name: Build Docker Image
        working-directory: uservice-webapi
        run: |
          export IMAGE_NAME_BASE=ghcr.io/onlexnet/uservice-webapi

          export IMAGE_NAME_HOST=$IMAGE_NAME_BASE

          # build 'latest' image. 'latest' tag is added automatically by build-image plugin
          mvn spring-boot:build-image -ntp -pl host -Dspring-boot.build-image.imageName=$IMAGE_NAME_HOST -DskipTests

          # add proper ID to distinguish image from other images built in this workflow
          docker tag $IMAGE_NAME_HOST $IMAGE_NAME_HOST:$GITHUB_RUN_ID

          docker push --all-tags $IMAGE_NAME_HOST
          echo "docker push --all-tags $IMAGE_NAME_HOST"

          docker images

          # export just published image name so that it can be used by next steps
          echo "image_name=$IMAGE_NAME_HOST:$GITHUB_RUN_ID" >> "$GITHUB_OUTPUT"

  DeployPrd:
    # https://learn.microsoft.com/en-us/azure/container-apps/github-actions#deploy-an-existing-container-image-to-container-apps
    name: Deploy to PRD01
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed' && github.event.ref == 'refs/heads/main')
    needs: [ Build ]
    runs-on: ubuntu-latest
    environment: PRD01
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          # prepare credentials for Azure CLI
          # more: https://github.com/marketplace/actions/azure-login#configure-a-service-principal-with-a-secret
          creds: '{"clientId":"${{ secrets.ONLEXNET_INFRA_CLIENT_ID }}","clientSecret":"${{ secrets.ONLEXNET_INFRA_SECRET }}","subscriptionId":"${{ secrets.ONLEXNET_SINNET_PRD01_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ONLEXNET_TENANT_ID }}"}'
      
      - name: Display Image Name
        env:
          IMAGE_NAME_INITDB_HOST: ${{needs.Build.outputs.uservice_webapi_image_name}}
          CONTAINERAPP_NAME: ${{ vars.ONLEXNET_SINNET_PRD01_CONTAINERAPP_NAME_WEBAPI }}
        run: |
          echo "image_name: $IMAGE_NAME_INITDB_HOST"
          # TODO replace hardcoded params below with proper values
          az containerapp update -n $CONTAINERAPP_NAME -g sinnet-env-prd01 --container-name uservice-webapi --image $IMAGE_NAME_INITDB_HOST

