
variables:
  dockerRegistryServiceConnection: "sinnet-acr"
  imageName: "uservice-customers"
  containerRegistry: "sinnetapps.azurecr.io"
  dockerRepository: onlex-sinnet-reports

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - helm
pool:
  vmImage: 'ubuntu-latest'

resources:
  pipelines:
  - pipeline: webapp_CI
    project: sinnet
    source: onlex-sinnet-webapp
    trigger: true
  - pipeline: webapi_CI
    project: sinnet
    source: onlex-sinnet-webapi
    trigger: true
  - pipeline: report_CI
    project: sinnet
    source: onlex-sinnet-reports
    trigger: true
  containers:
    - container: webapp
      type: ACR  
      azureSubscription: sinnet-default-manual-arm
      resourceGroup: sinnet-default-manual
      registry: sinnet
      repository: webapp
    - container: webapi
      type: ACR  
      azureSubscription: sinnet-default-manual-arm
      resourceGroup: sinnet-default-manual
      registry: sinnet
      repository: webapi
    - container: reports
      type: ACR  
      azureSubscription: sinnet-default-manual-arm
      resourceGroup: sinnet-default-manual
      registry: sinnet
      repository: onlex-sinnet-reports

stages:
  - stage: createHelmChart
    displayName: Create HELM Chart
    jobs:
      - job: CICD
        displayName: CI/CD build
        steps:
        - task: HelmDeploy@0
          displayName: Helm package and deploy
          inputs:
            command: package
            chartPath: helm/main
            azureContainerRegistry: $(dockerRegistryServiceConnection)
        - bash: |
              echo "##vso[task.setvariable variable=WEBAPP_IMAGE_TAG]$(resources.container.webapp.tag)"
              echo "##vso[task.setvariable variable=WEBAPI_IMAGE_TAG]$(resources.container.webapi.tag)"
              echo "##vso[task.setvariable variable=REPORTS_IMAGE_TAG]$(resources.container.reports.tag)"
          workingDirectory: helm/main
        - bash: |
              ./helm/main/makeconfig.sh
          displayName: Generate config.yaml
        - task: HelmDeploy@0
          displayName: Helm package
          inputs:
            command: package
            chartName: sinnet-reports
            chartPath:  helm/main/.
            chartVersion: $(Build.BuildNumber)
        - bash: |
              echo "##vso[task.setvariable variable=CHART_FILE_NAME]sinnet-reports-$(Build.BuildNumber).tgz"
        - bash: |
              echo "{ chartFileName: $(CHART_FILE_NAME)}" > chart.config
        - bash: |
              mkdir $(Build.ArtifactStagingDirectory)/artifact1
              mv chart.config $(Build.ArtifactStagingDirectory)/artifact1
              mv $(Build.ArtifactStagingDirectory)/$(CHART_FILE_NAME) $(Build.ArtifactStagingDirectory)/artifact1
              mv config.yaml $(Build.ArtifactStagingDirectory)/artifact1
          displayName: Move artifacts to single location before publishing
        - publish: $(Build.ArtifactStagingDirectory)/artifact1/
          displayName: Publish collected artifacts
          artifact: chart

  - stage: deployToStg
    displayName: Deploy HELM Chart to STG
    jobs:
      - deployment: deployToStg
        displayName: Deploy to STG01 (Beta)
        environment: onlexnet-sinnet-stg01
        strategy:                  
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: chart
                - bash: |
                    export CHART_FILE_NAME=$(echo cat $(Pipeline.Workspace)/config.yaml | jq '.chartFileName')
                    echo $CHART_FILE_NAME
                # - task: HelmDeploy@0
                #   displayName: Helm package
                #   inputs:
                #     command: package
                #     chartName: sinnet-reports
                #     chartPath:  helm/main/.
                #     chartVersion: $(Build.BuildNumber)



      # - job: deployment
      #   displayName: Deploy HELM chart
      #   steps:
      #   - checkout: none
      #   - task: HelmDeploy@0
      #     displayName: Helm deploy
      #     inputs:
      #       connectionType: Kubernetes Service Connection
      #       kubernetesServiceEndpoint: sinnet-microk8s
      #       namespace: onlex-sinnet-stg01
      #       command: upgrade
      #       install: true
      #       chartName: $(Build.ArtifactStagingDirectory)/sinnet-reports-0.3.14.tgz
