<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>sinnet</artifactId>
    <groupId>net.siudek</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <groupId>net.siudek</groupId>
  <artifactId>webapi</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>sinnet-webapi</name>

  <properties>
    <!-- required by integration with Spring. More @ https://github.com/graphql-java-kickstart/graphql-java-tools -->
    <kotlin.version>1.3.10</kotlin.version>

    <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/../${aggregate.report.dir}</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.projectKey>sinnet-reports-webapi</sonar.projectKey>
    <graphql-java-kickstart.version>6.0.0</graphql-java-kickstart.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>

    <dependency>
      <!-- turns your Spring Boot application into a GraphQL Server using GraphQL Servlet -->
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphql-java-servlet</artifactId>
      <version>9.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.axonframework</groupId>
      <artifactId>axon-messaging</artifactId>
    </dependency>

    <dependency>
      <!-- embeds the GraphiQL tool for schema introspection and query debugging (see GraphiQL) -->
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphiql-spring-boot-starter</artifactId>
      <version>${graphql-java-kickstart.version}</version>
    </dependency>

    <dependency>
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphql-spring-boot-starter</artifactId>
      <version>${graphql-java-kickstart.version}</version>
    </dependency>


    <!-- required dependency https://www.graphql-java-kickstart.com/tools/getting-started/#build-with-maven -->
    <dependency>
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphql-java-tools</artifactId>
      <version>5.7.1</version>
    </dependency>

    <!-- testing facilities -->
    <dependency>
      <groupId>com.graphql-java-kickstart</groupId>
      <artifactId>graphql-spring-boot-starter-test</artifactId>
      <version>${graphql-java-kickstart.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!--
        Special configuration

        GraphQL generates special classes incompatible with Jacoco
        As the result exception is generated as following:
          java.lang.instrument.IllegalClassFormatException:
          Error while instrumenting class 

        Where invalid classes have names finished with *MethodAccess
        Similar case -> see
        https://www.mail-archive.com/notifications@skywalking.apache.org
        /msg00546.html
      -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>*MethodAccess</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <!-- 
          allows run application by:
          mvn spring-boot:run 
        -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>