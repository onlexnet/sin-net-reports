extend type Query {
    Customers(projectId: ID!): CustomersQuery!
}

extend type Mutation {
    Customers(projectId: ID!): CustomersMutation!
}

type CustomersQuery {
    list: [CustomerEntity!]!
    get(entityId: MyEntity!): CustomerEntity
}

type CustomersMutation {
    reserve: SomeEntity!
    save(id: MyEntity!
         entry: CustomerInput!
         secrets: [CustomerSecretInput!]!
         secretsEx: [CustomerSecretExInput!]!
         contacts: [CustomerContactInput!]!): SomeEntity!
    remove(id: MyEntity!): Boolean
}

input CustomerInput {
    operatorEmail: String
    billingModel: String
    supportStatus: String
    distance: Int
    customerName: String!
    customerCityName: String
    customerAddress: String
    nfzUmowa: Boolean
    nfzMaFilie: Boolean
    nfzLekarz: Boolean
    nfzPolozna: Boolean
    nfzPielegniarkaSrodowiskowa: Boolean
    nfzMedycynaSzkolna: Boolean
    nfzTransportSanitarny: Boolean
    nfzNocnaPomocLekarska: Boolean
    nfzAmbulatoryjnaOpiekaSpecjalistyczna: Boolean
    nfzRehabilitacja: Boolean
    nfzStomatologia: Boolean
    nfzPsychiatria: Boolean
    nfzSzpitalnictwo: Boolean
    nfzProgramyProfilaktyczne: Boolean
    nfzZaopatrzenieOrtopedyczne: Boolean
    nfzOpiekaDlugoterminowa: Boolean
    nfzNotatki: String
    komercjaJest: Boolean
    komercjaNotatki: String
    daneTechniczne: String
}
input CustomerSecretInput {
    location: String!
    username: String
    password: String
}
input CustomerSecretExInput {
    location: String!
    username: String
    password: String
    entityName: String
    entityCode: String
}
input CustomerContactInput {
    firstName: String
    lastName: String
    phoneNo: String
    email: String
}

type CustomerEntity {
    id: Entity!
    data: CustomerModel!
    secrets: [CustomerSecret!]!
    secretsEx: [CustomerSecretEx!]!
    contacts: [CustomerContact!]!
}
type CustomerModel {
    operatorEmail: String
    billingModel: String
    supportStatus: String
    distance: Int
    customerName: String!
    customerCityName: String
    customerAddress: String
    nfzUmowa: Boolean
    nfzMaFilie: Boolean
    nfzLekarz: Boolean
    nfzPolozna: Boolean
    nfzPielegniarkaSrodowiskowa: Boolean
    nfzMedycynaSzkolna: Boolean
    nfzTransportSanitarny: Boolean
    nfzNocnaPomocLekarska: Boolean
    nfzAmbulatoryjnaOpiekaSpecjalistyczna: Boolean
    nfzRehabilitacja: Boolean
    nfzStomatologia: Boolean
    nfzPsychiatria: Boolean
    nfzSzpitalnictwo: Boolean
    nfzProgramyProfilaktyczne: Boolean
    nfzZaopatrzenieOrtopedyczne: Boolean
    nfzOpiekaDlugoterminowa: Boolean
    nfzNotatki: String
    komercjaJest: Boolean
    komercjaNotatki: String
    daneTechniczne: String
}
type CustomerSecret {
    location: String!
    username: String
    password: String
    changedWhen: String!
    changedWho: String!
}
type CustomerSecretEx {
    location: String!
    username: String
    password: String
    entityName: String
    entityCode: String
    changedWhen: String!
    changedWho: String!
}
type CustomerContact {
    firstName: String
    lastName: String
    phoneNo: String
    email: String
}


