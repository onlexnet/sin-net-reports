type Services {
    search(filter: ServicesFilter): ServicesSearchResult!
}

input ServiceEntry {
    whenProvided: String
    forWhatCustomer: ID
}

type ServicesSearchResult {
    items: [ServiceModel!]!
    totalDistance: Int!
}

type ServiceModel {
    servicemanName: String!
    whenProvided: String!
    forWhatCustomer: String!
}

input ServicesFilter {
    whenProvided: String
    forWhatCustomer: String
    onlyMine: Boolean
}

input When {
    period: YearMonth
}

extend type Mutation {
    Services: ServicesOperations!
}

type ServicesOperations {
    # Creates new, defaulted ServiceEntry as a part of given month.
    addNew(entry: ServiceEntry) : Boolean!
}